{
  "version": 3,
  "sources": ["../src/components/alert.ts", "../src/components/icon.ts", "../src/components/modal.ts", "../src/components/popup.ts", "../src/components/select.ts"],
  "sourcesContent": ["// =============================================================================\n// Boost.js | Alert Component\n// (c) Mathigon\n// =============================================================================\n\n\nimport {$body, $N, CustomElementView, register} from '../';\n\nlet $openAlert: Alert|undefined;\nconst $alertParent = $N('div', {class: 'snackbar'}, $body);\n\n\n@register('x-alert')\nexport class Alert extends CustomElementView {\n\n  ready() {\n    $alertParent.append(this);\n    this.$('button')?.on('click', () => this.close());\n  }\n\n  async open(duration = 2000) {\n    if ($openAlert === this) return;\n    if ($openAlert) await $openAlert.close();\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    $openAlert = this;\n    await this.enter('pop', 300).promise;\n    this.setAttr('role', 'alert');\n    if (duration) setTimeout(() => this.close(), duration);\n  }\n\n  async close() {\n    if ($openAlert !== this) return;\n    $openAlert = undefined;\n    this.removeAttr('role');\n    await this.exit('pop', 300).promise;\n  }\n}\n", "// =============================================================================\n// Boost.js | Icon Component\n// (c) Mathigon\n// =============================================================================\n\n\nimport {$N, CustomElementView, register} from '../';\n\n/**\n * SVG icon component, which loads from a global `/icons.svg` file.\n */\n@register('x-icon')\nexport class IconView extends CustomElementView {\n\n  ready() {\n    // The element already has an SVG child, or is being copied at runtime by\n    // a library like Vue.js.\n    if (this.children.length) return;\n\n    const $svg = $N('svg', {viewBox: '0 0 24 24', alt: '', role: 'presentation'}, this);\n    const $use = $N('use', {}, $svg);\n\n    const size = +this.attr('size') || 24;\n    for (const $el of [this, $svg]) $el.css({width: `${size}px`, height: `${size}px`});\n\n    this.onAttr('name', (n) => $use.setAttr('href', `/icons.svg#${n}`));\n    // TODO ARIA attributes / alt text\n    // TODO Maybe polyfill if <use> is not supported\n  }\n}\n", "// =============================================================================\n// Boost.js | Modal Component\n// (c) Mathigon\n// =============================================================================\n\n\nimport {$$, $body, $N, AnimationResponse, Browser, CustomElementView, ElementView, MediaView, register, Router} from '../';\n\n\nconst $modalBackground = $N('div', {class: 'modal-background'}, $body);\nlet backgroundAnimation: AnimationResponse|undefined;\n\nlet $openModal: Modal|undefined = undefined;\nlet lastFocusElement: HTMLElement|undefined = undefined;\n\nfunction tryClose() {\n  if ($openModal && $openModal.canClose) $openModal.close();\n}\n\n$modalBackground.on('click', tryClose);\n$body.onKey('Escape', tryClose);\nRouter.on('change', tryClose);\n\n$modalBackground.on('scrollwheel touchmove', (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n});\n\n$body.onKey('Space ArrowUp ArrowDown PageDown PageUp', (e: Event) => {\n  if ($openModal) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n});\n\n// -----------------------------------------------------------------------------\n\n/**\n * Modal component\n */\n@register('x-modal')\nexport class Modal extends CustomElementView {\n  private isOpen = false;\n  private $iframe?: ElementView;\n  private $video?: MediaView;\n  canClose = true;\n\n  ready() {\n    this.canClose = !this.hasAttr('no-close');\n    this.$iframe = this.$('iframe[data-src]')!;\n    this.$video = this.$('video') as MediaView|undefined;\n\n    const $buttons = $$(`[data-modal=${this.id}]`);\n    for (const $b of $buttons) $b.on('click', () => this.open());\n\n    // Look for new modals to open, after browser navigation.\n    Router.on('afterChange', ({$viewport}) => {\n      const $buttons = $viewport.$$(`[data-modal=${this.id}]`);\n      for (const $b of $buttons) $b.on('click', () => this.open());\n    });\n\n    // Open modals that are shown on pageload\n    if ((this.hasClass('open') || Browser.getHash() === this.id) && !$openModal) this.open(true);\n\n    // Change positioning for modals containing input fields on small screens,\n    // to have a better layout when the keyboard panel is shown.\n    if (this.$('input')) this.addClass('interactive');\n\n    const $close = this.$('.close');\n    if ($close) $close.on('click', () => this.close());\n\n    // Used for Modal.confirm()\n    for (const $btn of this.$$('.btn')) $btn.on('click', () => this.trigger('btn-click', $btn));\n  }\n\n  open(noAnimation = false) {\n    if (this.isOpen) return;\n\n    $modalBackground.setClass('light', this.hasClass('light'));\n    if ($openModal) {\n      $openModal.close(true);\n    } else if (noAnimation) {\n      $modalBackground.show();\n    } else if ($modalBackground.css('display') === 'block') {\n      // Special handling if modals are immediately closed and then opened.\n      backgroundAnimation?.cancel();\n    } else {\n      $modalBackground.enter('fade', 250);\n    }\n\n    this.isOpen = true;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    $openModal = this;\n    if (this.$iframe) this.$iframe.setAttr('src', this.$iframe.data.src);\n    if (this.$video) this.$video.play();\n\n    if (noAnimation) {\n      this.show();\n    } else {\n      this.enter('pop', 250).promise.then(() => this.css('transform', ''));\n    }\n\n    this.setAttr('role', 'dialog');\n    this.trigger('open');\n\n    lastFocusElement = document.activeElement as HTMLElement;\n    const $focus = this.$('input, a, button, textarea, [tabindex=\"0\"]');\n    if ($focus) $focus.focus();\n\n    window.ga?.('send', 'event', 'Modal', this.id);\n    window.gtag?.('event', 'modal', {action: this.id});\n  }\n\n  close(keepBg = false, noEvent = false) {\n    if (!this.isOpen) return;\n    this.isOpen = false;\n    this.removeAttr('role');\n    $openModal = undefined;\n\n    if (this.$iframe) this.$iframe.setAttr('src', '');\n    if (this.$video) this.$video.pause();\n\n    if (!keepBg) backgroundAnimation = $modalBackground.exit('fade', 250);\n    this.exit('pop', 250).promise.then(() => this.css('transform', ''));\n    if (!noEvent) this.trigger('close');\n    if (lastFocusElement) lastFocusElement.focus();\n  }\n\n  getOpenModal() {\n    return $openModal;\n  }\n}\n", "// =============================================================================\n// Boost.js | Popup Component\n// (c) Mathigon\n// =============================================================================\n\n\nimport {$body, CustomElementView, ElementView, register} from '../';\n\n\n/**\n * Popup component that reveals its `.popup-body` child when clicked.\n */\n@register('x-popup')\nexport class Popup extends CustomElementView {\n  private animation!: string;\n  private $bubble!: ElementView;\n  isOpen = false;\n\n  ready() {\n    this.animation = this.attr('animation') || 'pop';\n\n    this.$bubble = this.$('.popup-body')!;\n    this.$bubble.hide();\n\n    const $target = this.$('.popup-target')!;\n    $target.on('click', () => this.toggleOpen());\n    this.on('clickOutside', () => this.close());\n    for (const $a of this.$bubble.$$('a')) $a.on('click', () => this.close());\n\n    $body.onKey('Escape', () => this.close());\n  }\n\n  toggleOpen() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  open() {\n    if (this.isOpen) return;\n    this.isOpen = true;\n\n    this.addClass('active');\n    this.$bubble.enter(this.animation, 150);\n    this.$bubble.setAttr('role', 'dialog');\n    this.$bubble.focus();\n    this.trigger('open');\n  }\n\n  close() {\n    if (!this.isOpen) return;\n    this.isOpen = false;\n\n    this.removeClass('active');\n    this.$bubble.exit(this.animation, 150);\n    this.$bubble.removeAttr('role');\n    this.trigger('close');\n  }\n}\n", "// =============================================================================\n// Boost.js | Select Component\n// (c) Mathigon\n// =============================================================================\n\n\nimport {isOneOf, Obj} from '@mathigon/core';\nimport {CustomElementView, ElementView, Observable, register} from '../';\n\n\n/**\n * Select (radio-button-style) component.\n */\n@register('x-select')\nexport class Select extends CustomElementView {\n  $active!: ElementView;\n  $options: Obj<ElementView> = {};\n\n  ready() {\n    const $items = this.children;\n\n    this.$active = this.$('.active') || $items[0];\n    this.$active.addClass('active');\n\n    for (const [i, $i] of $items.entries()) {\n      // Make select elements tabbable\n      if (!isOneOf($i.tagName, 'A', 'BUTTON') && !$i.hasAttr('tabindex')) $i.setAttr('tabindex', 0);\n      $i.on('click', () => this.makeActive($i));\n      this.$options[$i.attr('value') || i] = $i;\n    }\n\n    this.trigger('change', this.$active);\n  }\n\n  makeActive($el: ElementView) {\n    if ($el === this.$active) return;\n\n    this.$active.removeClass('active');\n    this.$active = $el;\n    $el.addClass('active');\n    this.trigger('change', $el);\n  }\n\n  bindVariable(model: Observable, name: string) {\n    if (model[name] === undefined) model[name] = this.$active.attr('value');\n    this.on('change', ($el: ElementView) => (model[name] = $el.attr('value')));\n\n    model.watch(() => {\n      const $el = this.$options[model[name]];\n      if ($el) this.makeActive($el);\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": ["$N", "CustomElementView", "register", "CustomElementView", "$N", "register", "$body", "$N", "CustomElementView", "register", "$N", "$body", "CustomElementView", "$buttons", "register", "$body", "CustomElementView", "register", "CustomElementView", "$body", "register", "CustomElementView", "register", "CustomElementView", "register"]
}
